{"version":3,"sources":["user-registration-form.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAyD;AAUzD;IAQE,uCACS,YAAqC,EACrC,SAAsD,EACtD,QAAqB;QAFrB,iBAAY,GAAZ,YAAY,CAAyB;QACrC,cAAS,GAAT,SAAS,CAA6C;QACtD,aAAQ,GAAR,QAAQ,CAAa;QAVrB,aAAQ,GAAG;YAClB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAMC,CAAC;IAEJ,gDAAQ,GAAR,cAAkB,CAAC;IAEnB,8EAA8E;IAC9E,oDAAY,GAAZ;QAAA,iBAiBC;QAhBC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,UAAC,MAAM;YACL,0EAA0E;YAC1E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,wCAAwC;YAChE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,EAAE,IAAI,EAAE;gBAChC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,EACD,UAAC,MAAM;YACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE;gBAC/B,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACJ,CAAC;IAjCQ;QAAR,YAAK,EAAE;2DAKN;IANS,6BAA6B;QALzC,gBAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,WAAW,EAAE,yCAAyC;YACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;SACvD,CAAC;OACW,6BAA6B,CAmCzC;IAAD,oCAAC;CAnCD,AAmCC,IAAA;AAnCY,sEAA6B","file":"user-registration-form.component.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss'],\n})\nexport class UserRegistrationFormComponent implements OnInit {\n  @Input() userData = {\n    Username: '',\n    Password: '',\n    Email: '',\n    Birthday: '',\n  };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n\n  // This is the function responsible for sending the form inputs to the backend\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe(\n      (result) => {\n        // Logic for a successful user registration goes here! (To be implemented)\n        this.dialogRef.close(); // This will close the modal on success!\n        console.log(result);\n        this.snackBar.open( result, 'OK', {\n          duration: 2000,\n        });\n      },\n      (result) => {\n        console.log(result);\n        this.snackBar.open(result, 'OK', {\n          duration: 2000,\n        });\n      }\n    );\n  }\n}\n"]}