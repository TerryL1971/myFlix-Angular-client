{"version":3,"sources":["user-registration-form.component.ts"],"names":["core_1","require","UserRegistrationFormComponent","fetchApiData","dialogRef","snackBar","this","userData","Username","Password","Email","Birthday","prototype","ngOnInit","registerUser","_this","userRegistration","subscribe","result","close","console","log","open","duration","__decorate","Input","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAUAC,8BAAA,WAQE,SAAAA,EACSC,EACAC,EACAC,GAFAC,KAAAH,aAAAA,EACAG,KAAAF,UAAAA,EACAE,KAAAD,SAAAA,EAVAC,KAAAC,SAAW,CAClBC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAU,IA8Bd,OArBET,EAAAU,UAAAC,SAAA,aAGAX,EAAAU,UAAAE,aAAA,WAAA,IAAAC,EAAAT,KACEA,KAAKH,aAAaa,iBAAiBV,KAAKC,UAAUU,UAChD,SAACC,GAECH,EAAKX,UAAUe,QACfC,QAAQC,IAAIH,GACZH,EAAKV,SAASiB,KAAMJ,EAAQ,KAAM,CAChCK,SAAU,OAGd,SAACL,GACCE,QAAQC,IAAIH,GACZH,EAAKV,SAASiB,KAAKJ,EAAQ,KAAM,CAC/BK,SAAU,SA7BTC,WAAA,CAARxB,OAAAyB,iCADUvB,EAA6BsB,WAAA,CALzCxB,OAAA0B,UAAU,CACTC,SAAU,6BACVC,YAAa,0CACbC,UAAW,CAAC,8CAED3B,GAAb,GAAa4B,QAAA5B,8BAAAA","file":"user-registration-form.component.min.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss'],\n})\nexport class UserRegistrationFormComponent implements OnInit {\n  @Input() userData = {\n    Username: '',\n    Password: '',\n    Email: '',\n    Birthday: '',\n  };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n\n  // This is the function responsible for sending the form inputs to the backend\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe(\n      (result) => {\n        // Logic for a successful user registration goes here! (To be implemented)\n        this.dialogRef.close(); // This will close the modal on success!\n        console.log(result);\n        this.snackBar.open( result, 'OK', {\n          duration: 2000,\n        });\n      },\n      (result) => {\n        console.log(result);\n        this.snackBar.open(result, 'OK', {\n          duration: 2000,\n        });\n      }\n    );\n  }\n}\n"]}