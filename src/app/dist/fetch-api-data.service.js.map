{"version":3,"sources":["fetch-api-data.service.ts"],"names":[],"mappings":"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","file":"fetch-api-data.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/internal/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst apiUrl = 'https://myflix-app-2021.herokuapp.com/';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRegistrationService {\n  constructor(private http: HttpClient) {}\n  public userRegistration(userDetails: any): Observable<any> {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + 'users', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status},` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Something went wrong - please try again later!');\n  }\n\n  // User login\n  public userLogin(userDetails: any): Observable<any> {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + 'login', userDetails)\n      .pipe(catchError(this.userLoginHandleError));\n  }\n\n  private userLoginHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error logging in, please try again!');\n  }\n\n  // Get all movies\n  getAllMovies(): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + 'movies', {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n  // Non-typed response extraction\n  private extractResponseData(res: Response): any {\n    const body = res;\n    return body || {};\n  }\n\n  // Get movie by title\n  getMovieByTitle(): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + 'movies/:Title', {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.getMovieByTitleHandleError)\n      );\n  }\n\n  private getMovieByTitleHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error retieving movie details');\n  }\n\n  // Get director\n  getDirector(): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + 'movies/directors/:Name', {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.getDirectorHandleError)\n      );\n  }\n\n  private getDirectorHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error retieving director view');\n  }\n\n  // Get genre\n  getGenre(): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + 'movies/genres/:Name', {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.getGenreHandleError)\n      );\n  }\n\n  private getGenreHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error retieving genre view');\n  }\n\n  // Get user\n  getUser(user: any): Observable<any> {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + `users/${user}`, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.getUserHandleError));\n  }\n\n  private getUserHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error retrieving user account data');\n  }\n\n  // Get favorite movies for a user\n  getFavorite(id: string): Observable<any> {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http\n      .get(apiUrl + `users/${user}/favorites/${id}`, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.addFavoriteHandleError)\n      );\n  }\n\n  private getFavoriteHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error adding movie to favorites list');\n  }\n\n  // Add movies to favorites\n  addFavorite(id: string): Observable<any> {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http\n      .post(apiUrl + `users/${user}/favorites/${id}`, id, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.addFavoriteHandleError)\n      );\n  }\n\n  private addFavoriteHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error adding movie to favorites list');\n  }\n\n  // Edit user\n  updateUser(userDetails: any): Observable<any> {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http\n      .put(apiUrl + `users/${user}`, userDetails, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.editUserHandleError)\n      );\n  }\n\n  private editUserHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error updating user info');\n  }\n\n  // Delete user\n  deleteUser(): Observable<any> {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http\n      .delete(apiUrl + `users/${user}`, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.deleteUserHandleError)\n      );\n  }\n\n  private deleteUserHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error deleting profile');\n  }\n\n  // Delete a movie from the favorite movies\n  removeFavorite(id: string): Observable<any> {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return this.http\n      .delete(apiUrl + `users/${user}/favorites/${id}`, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token,\n        }),\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.removeFavoriteHandleError)\n      );\n  }\n\n  private removeFavoriteHandleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Error adding movie to favorites list');\n  }\n}\n"]}